#
# This is the SPEC file for creating binary RPMs for the Dom0.
#
#
# The Qubes OS Project, http://www.qubes-os.org
#
# Copyright (C) 2013  Marek Marczykowski  <marmarek@invisiblethingslab.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
#

%define _dracutmoddir	/usr/lib/dracut/modules.d

Name:		qubes-core-dom0-linux
Version:	@VERSION@
Release:	1%{?dist}
Summary:	Linux-specific files for Qubes dom0

Group:		Qubes
Vendor:		Invisible Things Lab
License:	GPL
URL:		http://www.qubes-os.org

BuildRequires:  make
BuildRequires:  pandoc
BuildRequires:  qubes-utils-devel >= 3.1.3
BuildRequires:  gcc
BuildRequires:  systemd-rpm-macros
BuildRequires: python3-devel
BuildRequires: python3-setuptools
Requires:	qubes-core-dom0
Requires:	python3-qubesadmin >= 4.2.3
Requires:	qubes-core-qrexec-dom0
Requires:	qubes-core-admin-client
Requires:	qubes-utils >= 3.1.3
Requires:	qubes-utils-libs >= 4.0.16
Requires:	qubes-rpm-oxide
Conflicts:	qubes-core-dom0 < 4.0.23
Requires:	%{name}-kernel-install
Requires:	xdotool
Requires:	createrepo_c
Requires:	rpm >= 4.14
Requires:	systemd-udev
# Needed for USB in dom0
Requires: usbguard
# salt needs to pass --console --show-output options now
Conflicts:  qubes-mgmt-salt-dom0-update < 4.1.4

Source0: %{name}-%{version}.tar.gz

%description
Linux customizations required to use system as Qubes dom0.
Additionally some graphical elements for every Linux desktop envirnment (icons,
appmenus etc).

%package kernel-install
Summary:	Kernel install hook for Xen-based system

# get rid of os-prober, it tries to mount and parse all the block devices in
# the system, including loop*
Provides: os-prober
Obsoletes: os-prober

%description kernel-install
Kernel install hook for Xen-based system.

%package -n qubes-core-dom0-vaio-fixes
Summary: Additional scripts for supporting suspend on Vaio Z laptops

%description -n qubes-core-dom0-vaio-fixes
Additional scripts for supporting suspend on Vaio Z laptops.

Due to broken Linux GPU drivers we need to do some additional actions during
suspend/resume.

%prep
%setup -q

%build
export BACKEND_VMM=@BACKEND_VMM@
make -C dom0-updates
make -C file-copy-vm
make -C doc manpages
make all

%install

## Appmenus
make install DESTDIR=$RPM_BUILD_ROOT

### Dom0 updates
install -m 0755 -D -- dom0-updates/qubes-dom0-updates.cron "$RPM_BUILD_ROOT/etc/cron.daily/qubes-dom0-updates.cron"
install -D dom0-updates/qubes-dom0-update $RPM_BUILD_ROOT/usr/bin/qubes-dom0-update
install -D dom0-updates/qubes-receive-updates $RPM_BUILD_ROOT/usr/libexec/qubes/qubes-receive-updates
install -D dom0-updates/patch-dnf-yum-config $RPM_BUILD_ROOT/usr/lib/qubes/patch-dnf-yum-config
install -m 0644 -D dom0-updates/qubes-cached.repo $RPM_BUILD_ROOT/etc/yum.real.repos.d/qubes-cached.repo
install -D dom0-updates/qfile-dom0-unpacker $RPM_BUILD_ROOT/usr/libexec/qubes/qfile-dom0-unpacker
install -d $RPM_BUILD_ROOT/etc/qubes-rpc
ln -s ../../usr/libexec/qubes/qubes-receive-updates $RPM_BUILD_ROOT/etc/qubes-rpc/qubes.ReceiveUpdates
install -d $RPM_BUILD_ROOT/etc/qubes/policy.d/
install -m 0644 qubes-rpc-policy/90-default-linux.policy \
       $RPM_BUILD_ROOT/etc/qubes/policy.d/90-default-linux.policy

install -d $RPM_BUILD_ROOT/var/lib/qubes/updates

# PipeWire workaround
install -d -- "$RPM_BUILD_ROOT/usr/share/pipewire/pipewire.conf.d/"
install -m 0644 -- system-config/10_pipewire-high-latency.conf "$RPM_BUILD_ROOT/usr/share/pipewire/pipewire.conf.d/"

# Qrexec services
mkdir -p $RPM_BUILD_ROOT/usr/lib/qubes/qubes-rpc
cp qubes-rpc/* $RPM_BUILD_ROOT/usr/lib/qubes/qubes-rpc/
for i in qubes-rpc/*; do ln -s ../../usr/lib/qubes/$i $RPM_BUILD_ROOT/etc/qubes-rpc/$(basename $i); done

### pm-utils
mkdir -p $RPM_BUILD_ROOT/usr/lib64/pm-utils/sleep.d
cp pm-utils/52qubes-pause-vms $RPM_BUILD_ROOT/usr/lib64/pm-utils/sleep.d/
mkdir -p $RPM_BUILD_ROOT%_unitdir
cp pm-utils/qubes-suspend.service $RPM_BUILD_ROOT%_unitdir

### Dracut module
mkdir -p $RPM_BUILD_ROOT/usr/lib/dracut/dracut.conf.d
cp dracut/dracut.conf.d/* $RPM_BUILD_ROOT/usr/lib/dracut/dracut.conf.d/

mkdir -p $RPM_BUILD_ROOT%{_dracutmoddir}
cp -r dracut/modules.d/* $RPM_BUILD_ROOT%{_dracutmoddir}/

### Others
mkdir -p $RPM_BUILD_ROOT/etc/sysconfig
install -m 0644 -D system-config/limits-qubes.conf $RPM_BUILD_ROOT/etc/security/limits.d/99-qubes.conf
install -D system-config/cpufreq-xen.modules $RPM_BUILD_ROOT/etc/sysconfig/modules/cpufreq-xen.modules
install -m 0440 -D system-config/qubes.sudoers $RPM_BUILD_ROOT/etc/sudoers.d/qubes
install -m 0644 -D -- system-config/polkit-1-qubes-allow-all.rules "$RPM_BUILD_ROOT/etc/polkit-1/rules.d/00-qubes-allow-all.rules"
install -D system-config/qubes-dom0.modules $RPM_BUILD_ROOT/etc/sysconfig/modules/qubes-dom0.modules
install -m 0644 -D -- system-config/qubes-sync-clock.cron "$RPM_BUILD_ROOT/etc/cron.d/qubes-sync-clock.cron"
install -D system-config/lvm-cleanup.cron-daily $RPM_BUILD_ROOT/etc/cron.daily/lvm-cleanup
install -d $RPM_BUILD_ROOT%_udevrulesdir
install -m 644 system-config/00-qubes-ignore-devices.rules $RPM_BUILD_ROOT%_udevrulesdir
install -m 644 system-config/12-qubes-ignore-lvm-devices.rules $RPM_BUILD_ROOT%_udevrulesdir
install -m 644 system-config/11-qubes-ignore-zvol-devices.rules $RPM_BUILD_ROOT%_udevrulesdir
install -m 644 system-config/99z-qubes-mark-ready.rules $RPM_BUILD_ROOT%_udevrulesdir
install -m 644 -D system-config/disable-lesspipe.sh $RPM_BUILD_ROOT/etc/profile.d/zz-disable-lesspipe.sh
install -m 644 -D system-config/disable-gpu-accel.sh $RPM_BUILD_ROOT/etc/profile.d/zz-disable-gpu-accel.sh
install -m 755 -D system-config/kernel-grub2.install $RPM_BUILD_ROOT/usr/lib/kernel/install.d/80-grub2.install
install -m 755 -D system-config/kernel-xen-efi.install $RPM_BUILD_ROOT/usr/lib/kernel/install.d/90-xen-efi.install
install -m 755 -D system-config/kernel-remove-bls.install $RPM_BUILD_ROOT/usr/lib/kernel/install.d/99-remove-bls.install
install -m 755 -D system-config/zvol_is_qubes_volume $RPM_BUILD_ROOT%_prefix/lib/udev/zvol_is_qubes_volume
install -m 644 -D system-config/75-qubes-dom0.preset \
    $RPM_BUILD_ROOT%_presetdir/75-qubes-dom0.preset
install -m 644 -D system-config/75-qubes-dom0-user.preset \
    $RPM_BUILD_ROOT%_userpresetdir/75-qubes-dom0-user.preset
install -m 644 -D system-config/99-qubes-default-disable.preset \
    $RPM_BUILD_ROOT%_presetdir/99-qubes-default-disable.preset
install -d $RPM_BUILD_ROOT/etc/dnf/protected.d
install -m 0644 system-config/dnf-protected-qubes-core-dom0.conf  \
        $RPM_BUILD_ROOT/etc/dnf/protected.d/qubes-core-dom0.conf
install -m 0755 -D uki-generate "$RPM_BUILD_ROOT/usr/lib/qubes/"

# USBguard and PCIe device handling
install -m 0755 -d -- "$RPM_BUILD_ROOT/etc/usbguard" \
        "$RPM_BUILD_ROOT/etc/usbguard/rules.d"
install -m 0644 -- system-config/qubes-usbguard.conf \
        "$RPM_BUILD_ROOT/etc/usbguard"
install -m 0644 -- system-config/qubes-usb-rules.conf \
        "$RPM_BUILD_ROOT/etc/usbguard/rules.d/02-qubes.conf"
install -D -m 0644 -- system-config/usbguard.service "$RPM_BUILD_ROOT%_unitdir/usbguard.service.d/30_qubes.conf"

touch $RPM_BUILD_ROOT/var/lib/qubes/.qubes-exclude-block-devices

# file copy to VM
install -m 755 file-copy-vm/qfile-dom0-agent $RPM_BUILD_ROOT/usr/lib/qubes/
install -m 755 file-copy-vm/qvm-copy-to-vm $RPM_BUILD_ROOT/usr/bin/
install -m 755 file-copy-vm/qvm-copy $RPM_BUILD_ROOT/usr/bin/
ln -s qvm-copy-to-vm $RPM_BUILD_ROOT/usr/bin/qvm-move-to-vm
ln -s qvm-copy $RPM_BUILD_ROOT/usr/bin/qvm-move

### Documentation
(cd doc; make DESTDIR=$RPM_BUILD_ROOT install)

# Vaio fixes
mkdir -p $RPM_BUILD_ROOT/usr/lib64/pm-utils/sleep.d
install -D vaio-fixes/00sony-vaio-audio $RPM_BUILD_ROOT/usr/lib64/pm-utils/sleep.d/
install -D vaio-fixes/99sony-vaio-audio $RPM_BUILD_ROOT/usr/lib64/pm-utils/sleep.d/
mkdir -p $RPM_BUILD_ROOT/etc/modprobe.d/
install -m 0644 -D -- vaio-fixes/snd-hda-intel-sony-vaio.conf "$RPM_BUILD_ROOT/etc/modprobe.d/"

# cpu-microcode-info
install -m 755 cpu-microcode-info/cpu-microcode-info $RPM_BUILD_ROOT/usr/bin/

%pre
if ! grep -q ^qubes: /etc/group ; then
		groupadd qubes
fi

%post
set -eo pipefail

/usr/lib/qubes/patch-dnf-yum-config

systemctl --quiet enable qubes-suspend.service
systemctl --quiet preset usbguard.service

# migrate dom0-updates check disable flag
if [ $1 -ge 2 ]; then
    if [ -e /var/lib/qubes/updates/disable-updates ]; then
        qvm-features dom0 service.qubes-update-check ''
        rm -f /var/lib/qubes/updates/disable-updates
    fi
fi

# setup thinpool autoextend
if [ -e /etc/lvm/lvm.conf ]; then
    tpool_threshold_line_value=$(grep -n -Po '^[^#]thin_pool_autoextend_threshold[ \t]*=[ \t]*\K\d+' /etc/lvm/lvm.conf)
    if [ -n "$tpool_threshold_line_value" ]; then
        tpool_threshold_line="$(echo "$tpool_threshold_line_value" | cut -d':' -f1)"
        tpool_threshold_value="$(echo "$tpool_threshold_line_value" | cut -d':' -f2)"

        if [ -n "$tpool_threshold_line" ] && [ -n "$tpool_threshold_value" ]; then
            prev_line="$(sed -n "$((tpool_threshold_line-1))p" /etc/lvm/lvm.conf)"
            qubes_comment='# QUBES OS: Custom value detected, not enforcing default. Recommended value: 90'

            if [ "$tpool_threshold_value" == 100 ]; then
                sed -i 's|^\([^#]thin_pool_autoextend_threshold\)[ \t]*=.*|\1 = 90|' /etc/lvm/lvm.conf

                systemctl restart lvm2-monitor
            else
                if [ "$tpool_threshold_value" != 90 ] && [ "$prev_line" != "$qubes_comment" ]; then
                    sed -i "${tpool_threshold_line}i $qubes_comment" /etc/lvm/lvm.conf
                fi
            fi
        fi
    fi
fi

%preun
if [ "$1" = 0 ] ; then
	# no more packages left

    systemctl disable qubes-suspend.service > /dev/null 2>&1
fi

%triggerin -- PackageKit
# dom0 have no network, but still can receive updates (qubes-dom0-update)
sed -i 's/^UseNetworkHeuristic=.*/UseNetworkHeuristic=false/' /etc/PackageKit/PackageKit.conf

%triggerin -- xorg-x11-drv-vmmouse
# Remove unnecessary udev rules that causes problems in dom0 (#605)
rm -f /lib/udev/rules.d/69-xorg-vmmouse.rules

%triggerin -- grub2-tools
chmod -x /etc/grub.d/10_linux

%files -f INSTALLED_FILES
# Dom0 updates
/etc/cron.daily/qubes-dom0-updates.cron
/etc/yum.real.repos.d/qubes-cached.repo
%_bindir/qubes-dom0-update
/usr/lib/qubes/patch-dnf-yum-config
%attr(4750,root,qubes) /usr/libexec/qubes/qfile-dom0-unpacker
/usr/libexec/qubes/qubes-receive-updates
/etc/qubes-rpc/qubes.ReceiveUpdates
%attr(0664,root,qubes) %config(noreplace) /etc/qubes/policy.d/90-default-linux.policy
%attr(0770,root,qubes) %dir /var/lib/qubes/updates
# vm updates, in addition to INSTALLED_FILES
%dir %{python3_sitelib}/qubes_vmupdate-*.egg-info
# Qrexec services
/etc/qubes-rpc/qubes.repos.*
/usr/lib/qubes/qubes-rpc/qubes.repos.*
# Dracut module
/usr/lib/dracut/dracut.conf.d/*
%dir %{_dracutmoddir}/90macbook12-spi-driver
%{_dracutmoddir}/90macbook12-spi-driver/*
%dir %{_dracutmoddir}/90qubes-pciback
%{_dracutmoddir}/90qubes-pciback/*
%dir %{_dracutmoddir}/90extra-modules
%{_dracutmoddir}/90extra-modules/*
%dir %{_dracutmoddir}/90qubes-udev
%{_dracutmoddir}/90qubes-udev/*
%config /etc/usbguard/rules.d/02-qubes.conf
%config /etc/usbguard/qubes-usbguard.conf
%_unitdir/usbguard.service.d/30_qubes.conf
# file copy
%_bindir/qvm-copy-to-vm
%_bindir/qvm-move-to-vm
%_bindir/qvm-copy
%_bindir/qvm-move
/usr/lib/qubes/qfile-dom0-agent
# pm-utils
/usr/lib64/pm-utils/sleep.d/52qubes-pause-vms
%_unitdir/qubes-suspend.service
# Others
/etc/sysconfig/modules/qubes-dom0.modules
/etc/sysconfig/modules/cpufreq-xen.modules
/etc/sudoers.d/qubes
/etc/polkit-1/rules.d/00-qubes-allow-all.rules
/etc/security/limits.d/99-qubes.conf
/usr/share/pipewire/pipewire.conf.d/10_pipewire-high-latency.conf
%_udevrulesdir/00-qubes-ignore-devices.rules
%_udevrulesdir/12-qubes-ignore-lvm-devices.rules
%_udevrulesdir/11-qubes-ignore-zvol-devices.rules
%_udevrulesdir/99z-qubes-mark-ready.rules
%attr(0755,root,root) %_prefix/lib/udev/zvol_is_qubes_volume
%attr(0644,root,root) /etc/cron.d/qubes-sync-clock.cron
/etc/cron.daily/lvm-cleanup
%config(noreplace) /etc/profile.d/zz-disable-lesspipe.sh
%config(noreplace) /etc/profile.d/zz-disable-gpu-accel.sh
%config(noreplace) /etc/dnf/protected.d/qubes-core-dom0.conf
%_presetdir/75-qubes-dom0.preset
%_presetdir/99-qubes-default-disable.preset
%_userpresetdir/75-qubes-dom0-user.preset
/var/lib/qubes/.qubes-exclude-block-devices
/usr/lib/qubes/uki-generate
# Man
%{_mandir}/man1/qvm-*.1*
%{_mandir}/man1/qubes-*.1*
# cpu-microcode-info
%_bindir/cpu-microcode-info

%files kernel-install
/usr/lib/kernel/install.d/80-grub2.install
/usr/lib/kernel/install.d/90-xen-efi.install
/usr/lib/kernel/install.d/99-remove-bls.install

%files -n qubes-core-dom0-vaio-fixes
/usr/lib64/pm-utils/sleep.d/00sony-vaio-audio
/usr/lib64/pm-utils/sleep.d/99sony-vaio-audio
/etc/modprobe.d/snd-hda-intel-sony-vaio.conf

%changelog
@CHANGELOG@
